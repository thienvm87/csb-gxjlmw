{"version":3,"sources":["App.js","index.js"],"names":["App","_React$PureComponent","_inherits","_super","_createSuper","props","_this","_classCallCheck","this","call","addSIPEventListener","type","UA","Object","keys","_assertThisInitialized","filter","item","startsWith","map","replace","concat","forEach","on","event","sipUA_newRTCSession","session","peerconnection","connection","originator","setState","rtcSession","addRemoteStream","rtcSession_peerconnection","sipUA","state","console","log","mediaConstraints","audio","video","sessionTimersExpires","_peerconnection$getRe","getRemoteStreams","remoteStream","_slicedToArray","handleRemoteStream","addEventListener","e","stream","telAudio","phone","current","srcObject","track","React","createRef","_createClass","key","value","configuration","sockets","JsSIP","WebSocketInterface","uri","password","contact_uri","session_timers","start","createElement","className","onClick","ref","autoPlay","PureComponent","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"+PA4HeA,SAxHN,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACP,SAAAA,EAAYK,GAAO,IAAAC,EAMf,OANeC,YAAAC,KAAAR,IACjBM,EAAAH,EAAAM,KAAAD,KAAMH,IAwBRK,oBAAsB,SAACC,EAAMC,GAC3BC,OAAOC,KAAIC,YAAAT,IACRU,OAAO,SAACC,GAAI,OAAKA,EAAKC,WAAWP,KACjCQ,IAAI,SAACF,GAAI,OAAKA,EAAKG,QAAO,GAAAC,OAAIV,EAAI,KAAK,MACvCW,QAAQ,SAACL,GACRL,EAAGW,GAAGN,EAAM,SAACO,GACXlB,EAAA,GAAAe,OAAQV,EAAI,KAAAU,OAAIJ,IAAQO,QAG/BlB,EAEDmB,oBAAsB,SAACD,GACrB,IACEE,EAGEF,EAHFE,QACuBC,EAErBH,EAFFE,QAAWE,WACXC,EACEL,EADFK,WAEFvB,EAAKI,oBAAoB,aAAcgB,GACvCpB,EAAKwB,SAAS,CAAEC,WAAYL,IAIT,UAAfG,GACFvB,EAAK0B,gBAAgBL,IAExBrB,EAED2B,0BAA4B,SAACT,GAC3B,IAAQG,EAAmBH,EAAnBG,eACRrB,EAAK0B,gBAAgBL,IACtBrB,EAEDG,KAAO,WACL,IAAQyB,EAAU5B,EAAK6B,MAAfD,MACRE,QAAQC,IAAIH,GACZA,EAAMzB,KAAI,iBAAmB,CAC3B6B,iBAAkB,CAAEC,OAAO,EAAMC,OAAO,GACxCC,qBAAsB,OAEzBnC,EAED0B,gBAAkB,SAACL,GACjB,IAAAe,EAAuBf,EAAegB,mBAA/BC,EAAiDC,YAAAH,EAAA,GAArC,GACfE,GACFtC,EAAKwC,mBAAmBF,GAE1BjB,EAAeoB,iBAAiB,YAAa,SAACC,GAC5C1C,EAAKwC,mBAAmBE,EAAEC,WAE7B3C,EAEDwC,mBAAqB,SAACG,GACpB,IAAiBC,EAAa5C,EAAK6C,MAA3BC,QAERF,EAASG,UAAYJ,EAErBA,EAAOF,iBAAiB,WAAY,SAACvB,GACnCY,QAAQC,IAAI,gCAAiCb,GAC7C,IAAQ8B,EAAU9B,EAAV8B,MAEJJ,EAASG,YAAcJ,IAK3BC,EAASG,UAAYJ,EAErBK,EAAMP,iBAAiB,QAAS,WAC9BX,QAAQC,IAAI,wCAAyCiB,QAIzDL,EAAOF,iBAAiB,cAAe,SAACvB,GACtCY,QAAQC,IAAI,mCAAoCb,GAC5C0B,EAASG,YAAcJ,IAI3BC,EAASG,UAAYJ,MArGvB3C,EAAK6C,MAAQI,IAAMC,YACnBlD,EAAK6B,MAAQ,CACXD,MAAO,KACPH,WAAY,MACZzB,EA8GH,OA7GAmD,YAAAzD,EAAA,EAAA0D,IAAA,oBAAAC,MACD,WACE,IAGMC,EAAgB,CACpBC,QAAS,CAJI,IAAIC,IAAMC,mBACvB,sCAIAC,IAAK,8BACLC,SAAU,uBACVC,YAAa,4CACbC,gBAAgB,GAEZjC,EAAQ,IAAI4B,IAAMlD,GAAGgD,GAC3BpD,KAAKE,oBAAoB,QAASwB,GAClC1B,KAAKsB,SAAS,CAAEI,UAChBA,EAAMkC,UACP,CAAAV,IAAA,SAAAC,MAoFD,WACE,OACEJ,IAAAc,cAAA,OAAKC,UAAU,OACbf,IAAAc,cAAA,UAAI,qBACJd,IAAAc,cAAA,UAAI,2CACJd,IAAAc,cAAA,UAAQE,QAAS/D,KAAKC,MAAM,QAC5B8C,IAAAc,cAAA,SAAOG,IAAKhE,KAAK2C,MAAOsB,UAAQ,SAGrCzE,EArHM,CAASuD,IAAMmB,gBCClBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPxB,IAAAc,cAACd,IAAMyB,WAAU,KACfzB,IAAAc,cAACrE,EAAG,OAEN2E","file":"static/js/main.91f3d808.chunk.js","sourcesContent":["import React from \"react\";\nimport JsSIP from \"jssip\";\nimport \"./styles.css\";\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.phone = React.createRef();\n    this.state = {\n      sipUA: null,\n      rtcSession: null\n    };\n  }\n  componentDidMount() {\n    const socket = new JsSIP.WebSocketInterface(\n      \"wss://cloudpbx.nextcrm.vn:8089/ws\"\n    );\n    const configuration = {\n      sockets: [socket],\n      uri: \"sip:810@cloudpbx.nextcrm.vn\",\n      password: \"aha2RpbqKSbskDn7KmLS\",\n      contact_uri: \"sip:122@cloudpbx.nextcrm.vn;transport=wss\",\n      session_timers: true\n    };\n    const sipUA = new JsSIP.UA(configuration);\n    this.addSIPEventListener(\"sipUA\", sipUA);\n    this.setState({ sipUA });\n    sipUA.start();\n  }\n\n  addSIPEventListener = (type, UA) => {\n    Object.keys(this)\n      .filter((item) => item.startsWith(type))\n      .map((item) => item.replace(`${type}_`, \"\"))\n      .forEach((item) => {\n        UA.on(item, (event) => {\n          this[`${type}_${item}`](event);\n        });\n      });\n  };\n\n  sipUA_newRTCSession = (event) => {\n    const {\n      session,\n      session: { connection: peerconnection },\n      originator\n    } = event;\n    this.addSIPEventListener(\"rtcSession\", session);\n    this.setState({ rtcSession: session });\n    // 判断此次回话是由本地发起，还是远端发起\n    if (originator === \"remote\") {\n    }\n    if (originator === \"local\") {\n      this.addRemoteStream(peerconnection);\n    }\n  };\n\n  rtcSession_peerconnection = (event) => {\n    const { peerconnection } = event;\n    this.addRemoteStream(peerconnection);\n  };\n\n  call = () => {\n    const { sipUA } = this.state;\n    console.log(sipUA);\n    sipUA.call(`sip:0961166133`, {\n      mediaConstraints: { audio: true, video: false },\n      sessionTimersExpires: 120\n    });\n  };\n\n  addRemoteStream = (peerconnection) => {\n    const [remoteStream] = peerconnection.getRemoteStreams();\n    if (remoteStream) {\n      this.handleRemoteStream(remoteStream);\n    }\n    peerconnection.addEventListener(\"addstream\", (e) => {\n      this.handleRemoteStream(e.stream);\n    });\n  };\n\n  handleRemoteStream = (stream) => {\n    const { current: telAudio } = this.phone;\n    // Display remote stream\n    telAudio.srcObject = stream;\n\n    stream.addEventListener(\"addtrack\", (event) => {\n      console.log('remote track \"addtrack\" event', event);\n      const { track } = event;\n\n      if (telAudio.srcObject !== stream) {\n        return;\n      }\n\n      // Refresh remote video\n      telAudio.srcObject = stream;\n\n      track.addEventListener(\"ended\", () => {\n        console.log('remote track \"ended\" event [track:%o]', track);\n      });\n    });\n\n    stream.addEventListener(\"removetrack\", (event) => {\n      console.log('remote track \"removetrack\" event', event);\n      if (telAudio.srcObject !== stream) {\n        return;\n      }\n      // Refresh remote video\n      telAudio.srcObject = stream;\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Hello CodeSandbox</h1>\n        <h2>Start editing to see some magic happen!</h2>\n        <button onClick={this.call}>Call</button>\n        <audio ref={this.phone} autoPlay />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}